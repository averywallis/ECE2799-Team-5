/*
 * Testing the feasibility/usability of the LCD.
 * Will display a couple images using bitmaps.
 * If you want to toy around with bitmaps,
 * following link is a great tool to convert images to bitmap usable by Arduino:
 * https://javl.github.io/image2cpp/
 * 
 * May need to install libraries, do this by going to 'Sketch'->'Include library'->'Manage Libraries'
 * Then search for the 'Adafruit GFX' and 'Adafruit SSD1306' libraries and install them
 * 
 * 
 * Pin connections (Arduino Uno/Nano):
 * SDA - A4
 * SCL - A5
 * VCC - 3V-5V
 * GND - GND
 */

//libraries
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

//micros
#define OLED_RESET 4

//create instance of ssd1306 object, passing the reset pin
Adafruit_SSD1306 display(OLED_RESET);


//bitmaps of images
// '', 128x64px
const unsigned char myBitmap [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x02, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xc0, 0x7f, 0xff, 0xfe, 0xff, 0xff, 0x03, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xc0, 0x7f, 0xff, 0xfc, 0xff, 0xff, 0x03, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0x80, 0xe0, 0xff, 0xfd, 0xfc, 0x7f, 0xff, 0x03, 0x0f, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0x81, 0xe0, 0xff, 0xf9, 0xf8, 0x8f, 0xff, 0x03, 0x07, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xc1, 0xe0, 0xff, 0xf1, 0xb0, 0x0f, 0xff, 0x03, 0x07, 0xff, 0xf3, 0xef, 0xff, 0xff, 0xff, 
  0xff, 0xc1, 0xe0, 0xf3, 0xe0, 0x10, 0x0f, 0xff, 0x03, 0x03, 0xff, 0xe3, 0xef, 0xff, 0xff, 0xff, 
  0xff, 0xc1, 0xe0, 0xe1, 0xc0, 0x18, 0x87, 0xff, 0x03, 0x03, 0xff, 0xc3, 0xef, 0xff, 0xff, 0xff, 
  0xff, 0xc1, 0xe0, 0x81, 0xf1, 0x18, 0x87, 0xff, 0x07, 0x03, 0xff, 0xc3, 0xcf, 0xff, 0xff, 0xff, 
  0xff, 0xc1, 0xe0, 0x80, 0xf1, 0x08, 0xc7, 0xff, 0x03, 0x03, 0xff, 0x80, 0xcf, 0xff, 0xff, 0xff, 
  0xff, 0xc1, 0xe0, 0x80, 0x71, 0x08, 0xcf, 0xff, 0x03, 0x07, 0xfe, 0x00, 0x8f, 0xff, 0xe7, 0xff, 
  0xff, 0xc1, 0xe0, 0x8c, 0x71, 0x08, 0x9f, 0xff, 0x03, 0x07, 0xfe, 0x00, 0x0f, 0xff, 0xe4, 0xff, 
  0xff, 0xc1, 0xe0, 0xdc, 0x31, 0x98, 0xbf, 0xbf, 0x03, 0x07, 0xef, 0xc3, 0x0f, 0xc7, 0xc0, 0xff, 
  0xff, 0xc1, 0xe0, 0xdc, 0x31, 0xb0, 0xff, 0x87, 0x03, 0x07, 0xc7, 0xc2, 0x01, 0x83, 0x80, 0x7f, 
  0xff, 0xc1, 0xe0, 0xfc, 0x31, 0xf0, 0x03, 0xc7, 0x87, 0x07, 0x03, 0xc2, 0x01, 0x01, 0x00, 0x7f, 
  0xff, 0xc1, 0xe0, 0xfc, 0x30, 0xf0, 0x87, 0x8f, 0x80, 0x06, 0x11, 0xc3, 0x0e, 0x11, 0x04, 0x3f, 
  0xff, 0xc1, 0xe0, 0xfc, 0x30, 0xf0, 0xc7, 0x8e, 0x00, 0x04, 0x20, 0xc3, 0x0e, 0x31, 0x84, 0x3f, 
  0xff, 0xc1, 0xe0, 0x04, 0x30, 0xf0, 0xc3, 0x9e, 0x01, 0x04, 0x00, 0xc3, 0x0c, 0x30, 0x84, 0x3f, 
  0xf8, 0xc1, 0xe0, 0x44, 0x30, 0xf0, 0xc3, 0x1f, 0x05, 0x00, 0x00, 0xc3, 0x0c, 0x38, 0x84, 0x7f, 
  0xf9, 0xc1, 0xc0, 0xcc, 0x30, 0xf0, 0xc3, 0x3f, 0x04, 0x08, 0x10, 0xc3, 0x0c, 0x38, 0x84, 0xff, 
  0xfb, 0xc1, 0x80, 0x8c, 0x30, 0xf0, 0xc2, 0x3f, 0x02, 0x18, 0x70, 0xc3, 0x0c, 0x08, 0x85, 0xff, 
  0xfd, 0xc1, 0x80, 0x0c, 0x30, 0xf0, 0xc2, 0x3f, 0x02, 0x70, 0x30, 0xc3, 0x0c, 0x00, 0x85, 0xff, 
  0xfc, 0xc0, 0x00, 0x0c, 0x30, 0xf0, 0xc0, 0x7f, 0x07, 0xf8, 0x70, 0xc3, 0x0c, 0x38, 0x87, 0xff, 
  0xfe, 0x00, 0x00, 0x8c, 0x30, 0xf0, 0xe0, 0x7f, 0x07, 0xf8, 0x30, 0xc3, 0x0c, 0x3f, 0x87, 0xff, 
  0xff, 0x00, 0x60, 0x84, 0x30, 0xf0, 0xe0, 0x7f, 0x07, 0xf8, 0x30, 0xc3, 0x8c, 0x3f, 0x87, 0xff, 
  0xff, 0x81, 0xe0, 0x84, 0x30, 0xe0, 0xe0, 0xff, 0x87, 0xf8, 0x30, 0xc3, 0x0c, 0x3f, 0x87, 0xff, 
  0xff, 0xc1, 0xe0, 0x84, 0x10, 0xe0, 0x60, 0xff, 0x83, 0xf8, 0x30, 0xc3, 0x0c, 0x3f, 0x87, 0xff, 
  0xff, 0xc1, 0xe0, 0x80, 0x20, 0xff, 0xe1, 0xff, 0x03, 0xf8, 0x30, 0xc7, 0x0c, 0x3f, 0x87, 0xff, 
  0xff, 0xc1, 0xe0, 0xc0, 0x20, 0x7f, 0xf1, 0xff, 0x0f, 0xf8, 0x30, 0xc7, 0x0c, 0x3f, 0x87, 0xff, 
  0xff, 0xc1, 0xe0, 0xc4, 0x7f, 0xff, 0xe3, 0xff, 0x0f, 0xf8, 0x30, 0xc7, 0x0c, 0x3b, 0x87, 0xff, 
  0xff, 0xc1, 0xe0, 0xc4, 0xff, 0x8f, 0xe3, 0xff, 0x0f, 0xf8, 0x30, 0x87, 0x0c, 0x39, 0x87, 0xff, 
  0xff, 0xc1, 0xe0, 0xff, 0xff, 0x87, 0xc7, 0xff, 0x0f, 0xfc, 0x30, 0x87, 0x0e, 0x3b, 0x87, 0xff, 
  0xff, 0xc1, 0xe0, 0xff, 0xff, 0x3f, 0xc7, 0xff, 0x0f, 0xfc, 0x30, 0x87, 0x0f, 0x33, 0x87, 0xff, 
  0xff, 0xc1, 0xe0, 0xff, 0xff, 0x3f, 0xc7, 0xff, 0x0f, 0xfe, 0x31, 0x87, 0x0f, 0x17, 0x87, 0xff, 
  0xff, 0xc1, 0xe0, 0xff, 0xff, 0x06, 0x8f, 0xff, 0x0f, 0xff, 0x03, 0x87, 0x0f, 0x87, 0x07, 0xff, 
  0xff, 0xc1, 0xe0, 0xff, 0xff, 0x80, 0x1f, 0xff, 0x2f, 0xff, 0x87, 0x87, 0x0f, 0xcf, 0x07, 0xff, 
  0xff, 0x81, 0xe0, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xaf, 0xff, 0xcf, 0xc7, 0x0f, 0xfe, 0x07, 0xff, 
  0xff, 0x01, 0xe0, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xbf, 0xff, 0xff, 0xc7, 0x8f, 0xff, 0x03, 0xff, 
  0xff, 0x00, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xe7, 0x8c, 0x7f, 0xe0, 0xff, 
  0xff, 0x20, 0x40, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xf9, 0x8f, 0x1f, 0xff, 0xff, 
  0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xc7, 0x3f, 0xff, 0xff, 
  0xff, 0xff, 0x80, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 
  0xff, 0xff, 0x80, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1e, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xfd, 0x63, 0x9c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xf9, 0x71, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xf9, 0x55, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xf1, 0x1b, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xf5, 0x9b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xdf, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xcf, 0xbf, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xdf, 0x3f, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xbf, 0xf7, 0xff, 0xff
};

// '220px-Fallout_New_Vegas', 128x64px
const unsigned char myBitmap2 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xdf, 0x80, 0x00, 0x71, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x17, 0x80, 0x00, 0x21, 0xe0, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0xbf, 0x80, 0x00, 0xa1, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xff, 0x80, 0x00, 0xf1, 0xc0, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 0xe3, 0xc0, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0xc3, 0xc0, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x93, 0x80, 0x1f, 0xfc, 0xe3, 0xcf, 0xff, 0xff, 0xf0, 0xe0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0xe3, 0xc2, 0x00, 0x10, 0x08, 0xe0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x10, 0x01, 0x40, 0x00, 0x01, 0xc3, 0x40, 0x08, 0x00, 0x08, 0x60, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x10, 0x07, 0x40, 0x00, 0x01, 0xe3, 0x80, 0x08, 0x00, 0x05, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x10, 0x07, 0x40, 0x00, 0x01, 0xe7, 0x80, 0x10, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x08, 0x05, 0x00, 0x07, 0x01, 0xc5, 0x80, 0x30, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x08, 0x07, 0x00, 0x1f, 0xc1, 0xc7, 0x83, 0xb0, 0x00, 0x63, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x08, 0x07, 0x00, 0x1a, 0xc1, 0xc7, 0x87, 0xe0, 0x70, 0xe3, 0xe0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x04, 0x06, 0x00, 0x3f, 0xe2, 0x87, 0x8f, 0x60, 0x50, 0xe2, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x04, 0x0e, 0x00, 0x71, 0xe3, 0xc7, 0x8f, 0xb0, 0x70, 0xe7, 0xe0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x04, 0x0e, 0x00, 0x30, 0xe3, 0xcf, 0x9e, 0xf8, 0x71, 0xe3, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x02, 0x0e, 0x00, 0x61, 0x42, 0x8b, 0x0b, 0x58, 0x50, 0xe1, 0x40, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x02, 0x0f, 0xfc, 0x71, 0xe3, 0x8f, 0x1d, 0x78, 0xf1, 0xc3, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x02, 0x0f, 0xf8, 0x61, 0xe3, 0x8f, 0x3e, 0x38, 0xe1, 0xc3, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0x0f, 0xf8, 0xa1, 0xc3, 0x0f, 0x3a, 0xa9, 0x61, 0xc1, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0x0d, 0xb8, 0x41, 0xc3, 0x8f, 0x3c, 0xb9, 0xe1, 0xc3, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0x1f, 0xf8, 0x01, 0xc7, 0x8f, 0x31, 0xf1, 0xe3, 0xc3, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x9f, 0xf8, 0x01, 0x85, 0x9e, 0x29, 0x71, 0xe1, 0xc3, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x94, 0x00, 0x01, 0xc7, 0x9e, 0x19, 0x01, 0xe3, 0xc7, 0xa0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x5c, 0x00, 0x37, 0xc7, 0x9e, 0x51, 0xf1, 0xe3, 0x87, 0x20, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x1c, 0x00, 0xfe, 0x87, 0x1e, 0x31, 0xf1, 0xc3, 0x87, 0x30, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x08, 0x01, 0xff, 0x8f, 0x1e, 0x20, 0x33, 0xc7, 0x87, 0x10, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x1c, 0x01, 0xff, 0x8f, 0x1e, 0x7c, 0x23, 0xc7, 0x86, 0x10, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x3c, 0x03, 0xe3, 0x8f, 0x1c, 0x7e, 0x63, 0xc7, 0x87, 0x18, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x28, 0x03, 0x47, 0x8f, 0x08, 0x02, 0x43, 0x43, 0x05, 0x08, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x3a, 0x03, 0x87, 0x8f, 0x3c, 0x7a, 0x83, 0xc7, 0x0e, 0x08, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x38, 0x07, 0x87, 0x8e, 0x3c, 0xfe, 0xa3, 0xc7, 0x06, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x30, 0x07, 0x87, 0x0d, 0x3c, 0xbd, 0x27, 0x87, 0x06, 0x04, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x38, 0x07, 0x07, 0x1e, 0x3c, 0xf5, 0x67, 0x8f, 0x0e, 0x04, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x38, 0x07, 0x07, 0x1e, 0x3c, 0xf3, 0xe7, 0x8e, 0x0e, 0x04, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x14, 0x06, 0x0e, 0x14, 0x14, 0xfa, 0xe6, 0x84, 0x0a, 0x02, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x34, 0x0f, 0x0f, 0x1e, 0x38, 0xff, 0xc7, 0x8e, 0x1e, 0x02, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x74, 0x0f, 0x0f, 0x1e, 0x78, 0xf7, 0xc7, 0x8e, 0x1e, 0x02, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x60, 0x0b, 0x1b, 0x1e, 0x59, 0xd9, 0x43, 0x06, 0x0a, 0x01, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x70, 0x0f, 0x2e, 0x1c, 0x78, 0xdf, 0x87, 0x0e, 0x1f, 0x01, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x70, 0x0f, 0xee, 0x3c, 0x78, 0xf7, 0x87, 0x9e, 0x1f, 0x01, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x20, 0x0d, 0x4c, 0x28, 0x28, 0xbf, 0x0f, 0xfa, 0x1d, 0x00, 0x80, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x60, 0x0d, 0xce, 0x3c, 0x10, 0x2f, 0x0f, 0xdc, 0x1f, 0x00, 0x80, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x42, 0x07, 0x8e, 0x3c, 0x10, 0x5e, 0x07, 0x1c, 0x1e, 0x40, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x40, 0x06, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x80, 0x88, 0xe3, 0x08, 0x0c, 0x87, 0x06, 0x02, 0x06, 0x20, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0xe3, 0x6c, 0x0c, 0x8f, 0x0f, 0x02, 0x07, 0x10, 0x00, 0x00
};

const unsigned char myBitmap4 [] PROGMEM = {
  // '20160319190047_1, 128x64px
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//setup code, runs once on boot
void setup()
{
  
  pinMode(13, OUTPUT); //set pin 13 to output
  delay(1000); //wait a second
  
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C); //setup the display, with proper power management and proper I2C address

  display.display(); //flush the screen (update)
  delay(2000); //wait a second
  display.clearDisplay(); //clear the display (doesn't force an update, just clears the buffer)
}

void loop(){ //think of this as the main function, but is called repeatedly by the IDE
  digitalWrite(13, HIGH); //turn LED on
  display.setTextSize(2); //set the text size of what you display to the display
  display.setTextColor(WHITE); //set color to white (pixel on in our case)
  display.setCursor(0,0); //set starting cursor in top left corner
  display.print("Hello, world!"); //print text

  display.setCursor(0,16); //change cursor location (down by 16 pixels)
  display.println("ECE2799"); //more text
  display.setCursor(0,32); //move test down
  display.print("This could work"); //more text
  display.display(); //update display
  delay(1000); //wait a second


  //do a series of bitmaps
  display.clearDisplay(); //clear the buffer
  display.drawBitmap(0, 0,  myBitmap, 128, 64, 1); //draw bitmap
  display.display(); //update display
  delay(1000); //wait a second

  display.clearDisplay();
  display.drawBitmap(0, 0,  myBitmap2, 128, 64, 1);
  display.display();
  delay(1000);

  display.clearDisplay();
  display.drawBitmap(0, 0,  myBitmap4, 128, 64, 1);
  display.invertDisplay(true);
  display.display();
  delay(1000);
  display.invertDisplay(false);

  
  display.clearDisplay();
}
